<?xml version="1.0" encoding="UTF-8" ?>

<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
        version="2.0">

    <description>JSTL 1.1 functions library</description>
    <display-name>JSTL functions</display-name>
    <tlib-version>1.1</tlib-version>
    <short-name>fn</short-name>
    <uri>http://java.sun.com/jsp/jstl/functions</uri>

    <function>
        <description>
            Tests if an input string contains the specified substring.
        </description>
        <name>contains</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>boolean contains(java.lang.String, java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${fn:contains(name, searchString)}">
        </example>
    </function>

    <function>
        <description>
            Tests if an input string contains the specified substring in a case insensitive way.
        </description>
        <name>containsIgnoreCase</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>boolean containsIgnoreCase(java.lang.String, java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${fn:containsIgnoreCase(name, searchString)}">
        </example>
    </function>

    <function>
        <description>
            Tests if an input string ends with the specified suffix.
        </description>
        <name>endsWith</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>boolean endsWith(java.lang.String, java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${fn:endsWith(filename, ".txt")}">
        </example>
    </function>

    <function>
        <description>
            Escapes characters that could be interpreted as XML markup.
        </description>
        <name>escapeXml</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String escapeXml(java.lang.String)</function-signature>
        <example>
            ${fn:escapeXml(param:info)}
        </example>
    </function>

    <function>
        <description>
            Returns the index withing a string of the first occurrence of a specified substring.
        </description>
        <name>indexOf</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>int indexOf(java.lang.String, java.lang.String)</function-signature>
        <example>
            ${fn:indexOf(name, "-")}
        </example>
    </function>

    <function>
        <description>
            Joins all elements of an array into a string.
        </description>
        <name>join</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String join(java.lang.String[], java.lang.String)</function-signature>
        <example>
            ${fn:join(array, ";")}
        </example>
    </function>

    <function>
        <description>
            Returns the number of items in a collection, or the number of characters in a string.
        </description>
        <name>length</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>int length(java.lang.Object)</function-signature>
        <example>
            You have ${fn:length(shoppingCart.products)} in your shopping cart.
        </example>
    </function>

    <function>
        <description>
            Returns a string resulting from replacing in an input string all occurrences
            of a "before" string into an "after" substring.
        </description>
        <name>replace</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)</function-signature>
        <example>
            ${fn:replace(text, "-", "&#149;")}
        </example>
    </function>

    <function>
        <description>
            Splits a string into an array of substrings.
        </description>
        <name>split</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String[] split(java.lang.String, java.lang.String)</function-signature>
        <example>
            ${fn:split(customerNames, ";")}
        </example>
    </function>

    <function>
        <description>
            Tests if an input string starts with the specified prefix.
        </description>
        <name>startsWith</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>boolean startsWith(java.lang.String, java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${fn:startsWith(product.id, "100-")}">
        </example>
    </function>

    <function>
        <description>
            Returns a subset of a string.
        </description>
        <name>substring</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String substring(java.lang.String, int, int)</function-signature>
        <example>
            P.O. Box: ${fn:substring(zip, 6, -1)}
        </example>
    </function>

    <function>
        <description>
            Returns a subset of a string following a specific substring.
        </description>
        <name>substringAfter</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String substringAfter(java.lang.String, java.lang.String)</function-signature>
        <example>
            P.O. Box: ${fn:substringAfter(zip, "-")}
        </example>
    </function>

    <function>
        <description>
            Returns a subset of a string before a specific substring.
        </description>
        <name>substringBefore</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String substringBefore(java.lang.String, java.lang.String)</function-signature>
        <example>
            Zip (without P.O. Box): ${fn:substringBefore(zip, "-")}
        </example>
    </function>

    <function>
        <description>
            Converts all of the characters of a string to lower case.
        </description>
        <name>toLowerCase</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String toLowerCase(java.lang.String)</function-signature>
        <example>
            Product name: ${fn.toLowerCase(product.name)}
        </example>
    </function>

    <function>
        <description>
            Converts all of the characters of a string to upper case.
        </description>
        <name>toUpperCase</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String toUpperCase(java.lang.String)</function-signature>
        <example>
            Product name: ${fn.UpperCase(product.name)}
        </example>
    </function>

    <function>
        <description>
            Removes white spaces from both ends of a string.
        </description>
        <name>trim</name>
        <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
        <function-signature>java.lang.String trim(java.lang.String)</function-signature>
        <example>
            Name: ${fn.trim(name)}
        </example>
    </function>


    <!--<function>-->
        <!--<description>-->
            <!--TagFunctionUtil.getConfig-->
            <!--获取配置-->
        <!--</description>-->
        <!--<name>getConfig</name>-->
        <!--<function-class>cn.kjzf.core.util.TagFunctionUtil</function-class>-->
        <!--<function-signature>java.lang.String getConfig(java.lang.String)</function-signature>-->
        <!--<example>-->
            <!--fn:getConfig(key)-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--StringHelper.getInteger-->
            <!--四舍五入取整-->
        <!--</description>-->
        <!--<name>getInteger</name>-->
        <!--<function-class>cn.kjzf.core.util.StringHelper</function-class>-->
        <!--<function-signature>int getInteger(java.lang.Double)</function-signature>-->
        <!--<example>-->
            <!--fn:getInteger(score)-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--TagFunctionUtil.getExamType-->
            <!--获取系统类型-->
        <!--</description>-->
        <!--<name>getExamType</name>-->
        <!--<function-class>cn.kjzf.core.util.TagFunctionUtil</function-class>-->
        <!--<function-signature>java.lang.Integer getExamType()</function-signature>-->
        <!--<example>-->
            <!--fn:getExamType()-->
        <!--</example>-->
    <!--</function>-->
    <!--<function>-->
        <!--<description>-->
            <!--SysUtil.getFingerPrintVersion-->
            <!--获取指纹版本号-->
        <!--</description>-->
        <!--<name>getFingerPrintVersion</name>-->
        <!--<function-class>cn.kjzf.core.util.SysUtil</function-class>-->
        <!--<function-signature>java.lang.String getFingerPrintVersion()</function-signature>-->
        <!--<example>-->
            <!--fn:getFingerPrintVersion()-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--SysUtil.getYear-->
            <!--获取系统年份-->
        <!--</description>-->
        <!--<name>getYear</name>-->
        <!--<function-class>cn.kjzf.core.util.SysUtil</function-class>-->
        <!--<function-signature>java.lang.String getYear()</function-signature>-->
        <!--<example>-->
            <!--fn:getYear()-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--SysUtil.getMRegion-->
            <!--获取军区-->
        <!--</description>-->
        <!--<name>getMRegion</name>-->
        <!--<function-class>cn.kjzf.core.util.SysUtil</function-class>-->
        <!--<function-signature>java.lang.String getMRegion()</function-signature>-->
        <!--<example>-->
            <!--fn:getMRegion()-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--SysUtil.getTimerDelay-->
            <!--体检调度室设置刷新间隔分钟（默认为5分钟）-->
        <!--</description>-->
        <!--<name>getTimerDelay</name>-->
        <!--<function-class>cn.kjzf.core.util.SysUtil</function-class>-->
        <!--<function-signature>java.lang.Integer getTimerDelay()</function-signature>-->
        <!--<example>-->
            <!--fn:getTimerDelay()-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--SysUtil.intToSid-->
            <!--由数字转换成体检号-->
        <!--</description>-->
        <!--<name>intToSid</name>-->
        <!--<function-class>cn.kjzf.core.util.SysUtil</function-class>-->
        <!--<function-signature>java.lang.String intToSid(java.lang.Integer)</function-signature>-->
        <!--<example>-->
            <!--fn:intToSid(id)-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--SysUtil.intToTid-->
            <!--由数字转换成体检号-->
        <!--</description>-->
        <!--<name>intToTid</name>-->
        <!--<function-class>cn.kjzf.core.util.SysUtil</function-class>-->
        <!--<function-signature>java.lang.String intToTid(java.lang.Integer)</function-signature>-->
        <!--<example>-->
            <!--fn:intToTid(id)-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--SysUtil.getPsychoUserInfo-->
            <!--获取心选用户信息-->
        <!--</description>-->
        <!--<name>getPsychoUserInfo</name>-->
        <!--<function-class>cn.kjzf.comm.web.util.UserUtil</function-class>-->
        <!--<function-signature>boolean getPsychoUserInfo(java.lang.String)</function-signature>-->
        <!--<example>-->
            <!--fn:getPsychoUserInfo(key)-->
        <!--</example>-->
    <!--</function>-->

    <!--<function>-->
        <!--<description>-->
            <!--AppContext.getUser-->
            <!--获取系统用户信息-->
        <!--</description>-->
        <!--<name>getUser</name>-->
        <!--<function-class>cn.kjzf.comm.web.context.AppContext</function-class>-->
        <!--<function-signature>cn.kjzf.bean.mybatis.model.bean.SysUser getUser()</function-signature>-->
        <!--<example>-->
            <!--fn:getUser(key)-->
        <!--</example>-->
    <!--</function>-->

</taglib>
