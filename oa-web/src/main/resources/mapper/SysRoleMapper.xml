<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oa.web.mapper.SysRoleMapper">

    <resultMap id="BaseResultMap" type="com.oa.bean.sys.SysRole">
        <id column="id" property="id"/>
        <result column="name_" property="name"/>
        <result column="description" property="description"/>
        <result column="role_type" property="roleType"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="def_identify" property="defIdentify"/>
    </resultMap>

    <resultMap id="RolePmsResultMap" type="com.oa.bean.sys.view.RolePermissionView" extends="BaseResultMap">
        <result column="pms_id" property="pmsId"/>
        <result column="pms_name" property="pmsName" />
    </resultMap>

    <sql id="Base_Column_List">
        <trim>
            id, name_, description, role_type, create_time, update_time, def_identify
        </trim>
    </sql>

    <insert id="saveSysRole" parameterType="com.oa.bean.sys.SysRole">
        INSERT INTO sys_role (<include refid="Base_Column_List"/>)
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            #{id},#{name},#{description},#{roleType},#{createTime},#{updateTime},#{defIdentify}
        </trim>
    </insert>

    <update id="updateSysRole" parameterType="com.oa.bean.sys.SysRole">
        UPDATE sys_role
        <set>
            <if test="name != null">
                name_ = #{name},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="roleType != null">
                role_type = #{roleType},
            </if>
            <!--<if test="createTime != null">-->
                <!--create_time = #{createTime},-->
            <!--</if>-->
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="defIdentify != null">
                def_identify = #{defIdentify}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <if test="_parameter != null">
            DELETE FROM sys_role WHERE id = #{id}
        </if>
    </delete>

    <select id="getByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_role WHERE id = #{id}
    </select>

    <select id="getRoleByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_role WHERE name_ = #{roleName}
    </select>

    <select id="getRoleList" parameterType="com.oa.core.bean.PageBean" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_role
        <where>
            <trim>
                <if test="params.name != null and params.name != ''">
                    AND name_ = #{params.name}
                </if>
                <if test="params.nameLike != null and params.nameLike != ''">
                    AND name_ LIKE '%${params.nameLike}%'
                </if>
                <if test="params.begin != null and params.begin != '' and params.end != null and params.end != ''">
                    AND create_time BETWEEN #{params.begin} AND #{params.end}
                </if>
            </trim>
        </where>
        <if test="orderBy != null and orderBy != ''">
            ORDER BY ${orderBy}
        </if>
        <if test="orderBy == null or orderBy == ''">
            ORDER BY id
        </if>
    </select>


    <select id="getRoleAllList" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_role ORDER BY id
    </select>


    <!-- 查询角色权限列表 -->
    <select id="getRoleAndPmsList" parameterType="com.oa.core.bean.PageBean" resultMap="RolePmsResultMap">
        SELECT
            A.id,
            A.name_,
            GROUP_CONCAT(DISTINCT C.id ORDER BY C.id SEPARATOR ',') AS pms_id,
            GROUP_CONCAT(DISTINCT C.name_ ORDER BY C.id SEPARATOR ',') AS pms_name
        FROM sys_role AS A
        LEFT JOIN sys_role_permission AS B ON B.role_id = A.id
        LEFT JOIN sys_permission AS C ON C.id = B.pms_id
        <where>
            <if test="params.searchCon != null and params.searchCon != ''">
                AND LOWER(A.name_) LIKE LOWER(CONCAT('%', #{params.searchCon},'%'))
            </if>
        </where>
        GROUP BY A.id

        <if test="orderBy != null and orderBy != ''">
            ORDER BY ${orderBy}
        </if>
        <if test="orderBy == null or orderBy == ''">
            ORDER BY id,name_
        </if>
    </select>


</mapper>